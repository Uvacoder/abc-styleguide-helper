{"version":3,"sources":["icons/space.svg","icons/frame-ratio.svg","icons/frame-y.svg","icons/text-increment.svg","icons/unit.svg","components/specs/specs.js","utilities.js","components/setting.js","components/settings.js","components/demo-email/demo-email.js","variables.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Snippet","preview","code","className","style","gridTemplateColumns","Specs","variables","darkModeStyles","type","space","border","borderWidth","textFrame","color","width","height","borderRadius","layer","randomNumber","min","max","full","num","Math","random","rand","round","Number","EPSILON","setProperty","property","value","document","documentElement","fonts","buttonIsRound","getRandomObject","randomFontsPosition","length","fontFamily","textSizeIncrement","baseTextSize","textFrameRatio","textFrameY","unit","spaceIncrement","accentHue","accentSaturation","greySaturation","radius","fieldBorderWidth","buttonRound","numberToUnit","number","Setting","label","id","settingType","illustration","inputType","onChange","valueUnit","step","switchIsActive","children","props","htmlFor","undefined","checked","Settings","setFontFamily","setTextSizeIncrement","setBaseTextSize","setTextFrameRatio","setTextFrameY","setUnit","setSpaceIncrement","setAccentHue","setAccentSaturation","accentLightness","setAccentLightness","setGreySaturation","setRadius","setFieldBorderWidth","setButtonRound","darkMode","setDarkMode","setPreview","handleRandomize","textIncrement","e","target","unitSvg","opacity","frameY","frameRatio","onClick","href","rel","class","viewBox","version","aria-hidden","fill","fill-rule","d","emails","name","handle","content","menuItems","DemoEmail","map","menuItem","index","key","placeholder","email","xmlns","stroke","stroke-width","initialState","App","useState","getVariables","createElement","head","appendChild","innerHTML","Object","values","join","useEffect","querySelector","classList","add","remove","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8afab597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.1f2e5cae.svg\";","module.exports = __webpack_public_path__ + \"static/media/frame-ratio.59be05c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/frame-y.84c17281.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-increment.8c93b195.svg\";","module.exports = __webpack_public_path__ + \"static/media/unit.3d53f8e8.svg\";","import React from 'react'\nimport './specs.css';\n\nconst Snippet = ({preview, code}) => (\n  <div className=\"snippetSection\" style={{ gridTemplateColumns: preview ? '1fr 1fr' : '1fr' }}>\n    {preview && (\n      <div className=\"previewSection\">\n        {preview}\n      </div>\n    )}\n\n    <div className=\"codeSection\">\n      <pre>\n        <code>{code}</code>\n      </pre>\n    </div>\n  </div>\n)\n\nconst Specs = ({\n  variables,\n  darkModeStyles,\n}) => {\n  return (\n    <div className=\"specsWrapper\">\n      <div className=\"snippetsSection\">\n        <div className=\"text-l\">Typography</div>\n        <Snippet\n          preview={(\n            <>\n              <div className=\"text-xl\">Aa 123 handgloves</div>\n              <div className=\"text-l\">Aa 123 handgloves</div>\n              <div className=\"text-m\">Aa 123 handgloves</div>\n              <div className=\"text-s\">Aa 123 handgloves</div>\n              <div className=\"text-xs\">Aa 123 handgloves</div>\n            </>\n          )}\n          code={variables.type}\n        />\n        <div className=\"text-l\">Spacing</div>\n        <Snippet\n          preview={(\n            <>\n              <div className=\"demoSpace demoSpace-s\"></div>\n              <div className=\"demoSpace demoSpace-m\"></div>\n              <div className=\"demoSpace demoSpace-l\"></div>\n              <div className=\"demoSpace demoSpace-xl\"></div>\n              <div className=\"demoSpace demoSpace-2xl\"></div>\n              <div className=\"demoSpace demoSpace-3xl\"></div>\n              <div className=\"demoSpace demoSpace-4xl\"></div>\n            </>\n          )}\n          code={variables.space}\n        />\n        <Snippet\n          preview={(\n            <>\n              <div\n                className=\"mb-s\"\n                style={{\n                  border: 'solid var(--c-overlay)',\n                  borderWidth: 'var(--textFrameY)'\n                }}\n              >Text frame even</div>\n              <div\n                style={{\n                  border: 'solid var(--c-overlay)',\n                  borderWidth: 'var(--textFrameY) var(--textFrameX)'\n                }}\n              >Text frame ratio</div>\n            </>\n          )}\n          code={variables.textFrame}\n        />\n        <div className=\"text-l\">Color</div>\n        <Snippet\n          preview={(\n            <>\n              <div className=\"colorsRow\">\n                <div className=\"colorBox bgc-grey1\"></div>\n                <div className=\"colorBox bgc-grey2\"></div>\n                <div className=\"colorBox bgc-grey3\"></div>\n                <div className=\"colorBox bgc-grey4\"></div>\n                <div className=\"colorBox bgc-grey5\"></div>\n                <div className=\"colorBox bgc-grey6\"></div>\n                <div className=\"colorBox bgc-grey7\"></div>\n                <div className=\"colorBox bgc-grey8\"></div>\n              </div>\n              <div className=\"mb-m\"></div>\n              <div className=\"colorsRow\">\n                <div className=\"colorBox bgc-accent\"></div>\n              </div>\n            </>\n          )}\n          code={variables.color}\n        />\n        <div className=\"text-l\">Layer</div>\n        <Snippet\n          preview={(\n            <div style={{\n              width: '4rem',\n              height: '4rem',\n              border: 'var(--fieldBorderWidth) solid currentColor',\n              borderRadius: 'var(--radius)',\n            }} />              \n          )}\n          code={variables.layer}\n        />\n        <div className=\"text-l\">Dark mode styles</div>\n        <Snippet\n          code={darkModeStyles}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Specs","export const randomNumber = (min, max, full) => {\n  const num = Math.random() * (max - min) + min\n  let rand = min + Math.random() * (max - min);\n  if (full === 'full') {\n    return Math.round(rand)\n  }\n  return Math.round((num + Number.EPSILON) * 100) / 100\n}\n\nexport const setProperty = (property, value) => {\n  document.documentElement.style.setProperty(`--${property}`, value);\n}\n\nexport const getProperty = (property) => {\n  getComputedStyle(document.documentElement).getPropertyValue(`--${property}`);\n}\n\nexport const fonts = [\n  'system-ui',\n  'IBM Plex Sans',\n  'futura, sans-serif',\n  'Roboto Mono',\n  'Nunito',\n  'helvetica, sans-serif',\n  'Merriweather',\n  'Work Sans',\n]\n\nconst buttonIsRound = [true, false, false, false]\n\nexport const getRandomObject = () => {\n  const randomFontsPosition = randomNumber(0, fonts.length-1, 'full')\n  return {\n    fontFamily: fonts[randomFontsPosition],\n    textSizeIncrement: randomNumber(1.2, 1.4),\n    baseTextSize: randomNumber(0.875, 1.1),\n    textFrameRatio: randomNumber(1.2, 3),\n    textFrameY: randomNumber(0.4, 1),\n    unit: randomNumber(0.4, 0.8),\n    spaceIncrement: randomNumber(1.5, 1.8),\n    accentHue: randomNumber(0, 360, 'full'),\n    accentSaturation: randomNumber(0, 100, 'full'),\n    greySaturation: randomNumber(0, 10, 'full'),\n    radius: randomNumber(0, 0.4),\n    fieldBorderWidth: randomNumber(1, 3, 'full'),\n    buttonRound: buttonIsRound[randomNumber(0, 3, 'full')],\n  }\n}\n\nexport const numberToUnit = (number, unit) => `${number}${unit}`","import React from 'react'\n\nconst Setting = ({\n  label,\n  id,\n  illustration,\n  settingType,\n  inputType,\n  value,\n  onChange,\n  valueUnit,\n  step,\n  children,\n  switchIsActive,\n  ...props\n}) => {\n  return (\n    <div\n      className=\"settingWrapper\"\n      style={props.max && {\n        '--value': `${100-(props.max - value)/(props.max - props.min)*100}%`\n      }}>\n      {/* {illustration && (\n        <div className=\"settingIllustrationSection\">\n          <img alt=\"\" src={illustration} className=\"settingIllustration\"/>\n        </div>\n      )} */}\n\n      {settingType === \"input\" && (\n        <>\n          <label className=\"settingLabel\" htmlFor={id}>\n            {label}\n          </label>\n          <input\n            id={id}\n            type={inputType}\n            value={value}\n            onChange={onChange}\n            step={step}\n            className={inputType === \"text\" ? 'settingTextInput' : undefined}\n            {...props}\n          />\n          {inputType === \"range\" && (\n            <div className=\"settingNumberInputWrapper\">\n              <input\n                id={id}\n                className=\"settingTextInput settingTextInputSmall\"\n                type=\"number\"\n                value={value}\n                onChange={onChange}\n                step={step}\n              />\n              <div className=\"settingNumberUnit\">\n                {valueUnit}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n      {settingType === \"switch\" && (\n        <div className=\"switchSettingWrapper\">\n          <label className=\"switchTrack\">\n            <input id={id} type=\"checkbox\" checked={switchIsActive} onChange={onChange} />\n            <div className=\"switchKnob\"></div>\n          </label>\n          <label className=\"settingLabel\" htmlFor={id}>\n            {label}\n          </label>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Setting","import React from 'react'\nimport Setting from './setting';\nimport '../settings.css';\nimport '../slider.css';\nimport space from '../icons/space.svg'\nimport frameRatio from '../icons/frame-ratio.svg'\nimport frameY from '../icons/frame-y.svg'\nimport textIncrement from '../icons/text-increment.svg'\nimport unitSvg from '../icons/unit.svg'\n\nconst Settings = ({\n  fontFamily,\n  setFontFamily,\n  textSizeIncrement,\n  setTextSizeIncrement,\n  baseTextSize,\n  setBaseTextSize,\n  textFrameRatio,\n  setTextFrameRatio,\n  textFrameY,\n  setTextFrameY,\n  spaceIncrement,\n  unit,\n  setUnit,\n  setSpaceIncrement,\n  accentHue,\n  setAccentHue,\n  accentSaturation,\n  setAccentSaturation,\n  accentLightness,\n  setAccentLightness,\n  greySaturation,\n  setGreySaturation,\n  radius,\n  setRadius,\n  fieldBorderWidth,\n  setFieldBorderWidth,\n  buttonRound,\n  setButtonRound,\n  darkMode,\n  setDarkMode,\n  preview,\n  setPreview,\n\n  handleRandomize,\n}) => {\n  \n  return (  \n    <div className=\"settingsWrapper\">\n      <div className=\"settingsGrid\">\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\">\n            Typography\n          </h2>\n          <Setting\n            label=\"Text increment\"\n            illustration={textIncrement}\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"textSizeIncrement\"\n            value={textSizeIncrement}\n            onChange={(e) => setTextSizeIncrement(e.target.value)}\n            min={1}\n            max={2}\n            step={0.01}\n            valueUnit=\"ratio\"\n          />\n          <Setting\n            label=\"Base size\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"baseTextSize\"\n            value={baseTextSize}\n            onChange={(e) => setBaseTextSize(e.target.value)}\n            min={0.8}\n            max={2}\n            step={0.01}\n            valueUnit=\"rem\"\n          />\n          <Setting\n            label=\"Font\"\n            settingType=\"input\"\n            inputType=\"text\"\n            id=\"fontFamily\"\n            value={fontFamily}\n            onChange={(e) => setFontFamily(e.target.value)}\n          />\n        </div>\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\">\n            Spacing\n          </h2>\n          <Setting\n            label=\"Unit\"\n            illustration={unitSvg}\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"unit\"\n            value={unit}\n            onChange={(e) => setUnit(e.target.value)}\n            min={0.4}\n            max={0.8}\n            step={0.01}\n            valueUnit=\"rem\"\n          />\n          <Setting\n            label=\"Space increment\"\n            illustration={space}\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"spaceIncrement\"\n            value={spaceIncrement}\n            onChange={(e) => setSpaceIncrement(e.target.value)}\n            min={1}\n            max={2}\n            step={0.01}\n            valueUnit=\"ratio\"\n          />\n        </div>\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\" style={{opacity: 0}}>\n            -\n          </h2>\n          <Setting\n            label=\"Text frame\"\n            illustration={frameY}\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"textFrameY\"\n            value={textFrameY}\n            onChange={(e) => setTextFrameY(e.target.value)}\n            min={0}\n            max={1}\n            step={0.01}\n            valueUnit=\"em\"\n          />\n          <Setting\n            label=\"Button proportion\"\n            illustration={frameRatio}\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"textFrameRatio\"\n            value={textFrameRatio}\n            onChange={(e) => setTextFrameRatio(e.target.value)}\n            min={1}\n            max={3}\n            step={0.01}\n            valueUnit=\"ratio\"\n          />\n        </div>\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\">\n            Color\n          </h2>\n          <Setting\n            label=\"Accent hue\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"accentHue\"\n            value={accentHue}\n            onChange={(e) => setAccentHue(e.target.value)}\n            min={0}\n            max={360}\n            step={1}\n            valueUnit=\"°\"\n          />\n          <Setting\n            label=\"Accent saturation\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"accentSaturation\"\n            value={accentSaturation}\n            onChange={(e) => setAccentSaturation(e.target.value)}\n            min={0}\n            max={100}\n            step={1}\n            valueUnit=\"%\"\n          />\n          <Setting\n            label=\"Accent lightness\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"accentLightness\"\n            value={accentLightness}\n            onChange={(e) => setAccentLightness(e.target.value)}\n            min={0}\n            max={100}\n            step={1}\n            valueUnit=\"%\"\n          />\n        </div>\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\" style={{opacity: 0}}>\n            -\n          </h2>\n          <Setting\n            label=\"Grey saturation\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"greySaturation\"\n            value={greySaturation}\n            onChange={(e) => setGreySaturation(e.target.value)}\n            min={0}\n            max={100}\n            step={1}\n            valueUnit=\"%\"\n          />\n        </div>\n        <div className=\"settingsGridColumn\">\n          <h2 className=\"settingsGridColumnTitle\">\n            Layer\n          </h2>\n          <Setting\n            label=\"Radius\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"radius\"\n            value={radius}\n            onChange={(e) => setRadius(e.target.value)}\n            min={0}\n            max={0.5}\n            step={0.01}\n            valueUnit=\"rem\"\n          />\n          <Setting\n            label=\"Field border\"\n            settingType=\"input\"\n            inputType=\"range\"\n            id=\"fieldBorderWidth\"\n            value={fieldBorderWidth}\n            onChange={(e) => setFieldBorderWidth(e.target.value)}\n            min={1}\n            max={3}\n            step={1}\n            valueUnit=\"px\"\n          />\n          <Setting\n            label=\"Round buttons\"\n            settingType=\"switch\"\n            id=\"buttonRound\"\n            switchIsActive={buttonRound}\n            onChange={() => setButtonRound(!buttonRound)}\n          />\n\n        </div>\n        <div className=\"settingsGridColumn triggersColumn\">\n          <div className=\"randomButtonSection\">\n            <button\n              className=\"triggerButton\"\n              onClick={() => handleRandomize()}\n            >\n              Randomize\n            </button>\n          </div>\n          <Setting\n            label=\"Dark mode\"\n            settingType=\"switch\"\n            id=\"darkMode\"\n            switchIsActive={darkMode}\n            onChange={() => setDarkMode(!darkMode)}\n          />\n          <div>\n            <div className=\"settingButtonGroup\">\n              <button\n                className={preview === 'demo' ? 'settingButton active' : 'settingButton'}\n                onClick={() => setPreview('demo')}\n              >\n                Demo\n              </button>\n              <button\n                className={preview === 'specs' ? 'settingButton active' : 'settingButton'}\n                onClick={() => setPreview('specs')}\n              >\n                Specs\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mainLogoSection\">\n          <div className=\"mainLogo\">\n            <span>S</span>\n            <span>H</span>\n            <span>A</span>\n            <span>P</span>\n            <span>E</span>\n            <span>R</span>\n          </div>\n\n          <a className=\"ghIcon\" href=\"https://github.com/hihayk/shaper\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <svg class=\"octicon octicon-mark-github v-align-middle\" viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings","import React from 'react'\nimport './demo-email.css'\n\nconst emails = [\n  { name: 'Brian Dog', handle: '@brian', content: 'This device includes 4 delays that can be patched together in the way that the user wishes, this allows greater control to generate loops and feedback.' },\n  { name: 'Brian Dog', handle: '@brian', content: 'This device includes 4 delays that can be patched together in the way that the user wishes, this allows greater control to generate loops and feedback.' },\n  { name: 'Brian Dog', handle: '@brian', content: 'This device includes 4 delays that can be patched together in the way that the user wishes, this allows greater control to generate loops and feedback.' },\n]\nconst menuItems = [\n  'Menu item', 'Another', 'Third', 'More'\n]\n\nconst DemoEmail = () => (\n  <div className=\"emailWrapper\">\n    <aside className=\"sidebar\">\n      <div className=\"logo mb-xl\"></div>\n      <button className=\"button button-accent text-l mb-xl\">New</button>\n      {menuItems.map((menuItem, index) => (\n        <div className={index === 1 ? 'menuItem active' : 'menuItem'} key={index}>\n          {menuItem}\n        </div>\n      ))}\n    </aside>\n    <main>\n      <div className=\"mb-l text-xl\">\n        <strong>The Interpolation Time</strong>\n      </div>\n      <div className=\"tabs mb-l\">\n        <strong className=\"tab active\">First</strong>\n        <div className=\"tab\">Second</div>\n        <div className=\"tab\">Third</div>\n      </div>\n      <div className=\"searchSection\">\n        <input type=\"text\" className=\"textInput\" placeholder=\"Search\" />\n      </div>\n      <div className=\"post mb-xl\">\n        <div className=\"postLeft\">\n          <div className=\"postAvatar\"></div>\n        </div>\n        <div className=\"postMain\">\n          <div className=\"postAuthor\">{emails[2].name}</div>\n          <div className=\"postContent mb-m text-l\">{emails[2].content}</div>\n          <div className=\"postDate text-s c-bodyDimmed\">6:51 p. m. · 11 jun. 2020</div>\n        </div>\n      </div>\n      <div className=\"emails\">\n        {emails.map((email, index) => (\n          <div className=\"email\" key={index}>\n            <div className=\"listCell\">{email.name}</div>\n            <div className=\"listCell c-bodyDimmed\">{email.content}</div>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-xl\"></div>\n      \n      <div className=\"formGrid\">\n        <div>\n          <label>Email</label>\n          <input type=\"text\" className=\"textInput mt-s\" value=\"email@example.com\" />\n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" className=\"textInput mt-s\" value=\"123456\" />\n        </div>\n        <button className=\"button\">Log in</button>\n      </div>\n\n      <div className=\"mb-xl\"></div>\n    </main>\n    <aside className=\"detailsPanel\">\n      <div className=\"userCard\">\n        <div className=\"userCardAvatar\"></div>\n        <div className=\"userCardInfo\">\n          <div className=\"userCardName\">{emails[1].name}</div>\n          <div className=\"userCardHandle c-bodyDimmed\">{emails[1].handle}</div>\n        </div>\n        \n        <button className=\"button buttonSmall\">Follow</button>\n      </div>\n\n      <div className=\"mb-m\"></div>\n      \n      <div className=\"highlightCard\">\n        <div className=\"highlightCardInfo\">\n          <strong>This device includes 4 delays </strong>\n          Greater control to generate loops\n        </div>\n        <div className=\"highlightCardAvatars\">\n          <div className=\"highlightCardAvatar\" />\n          <div className=\"highlightCardAvatar\" />\n          <div className=\"highlightCardAvatar\" />\n        </div>\n      </div>\n\n      <div className=\"mb-m\"></div>\n\n      <div className=\"chartCard\">\n        <div className=\"chart\">\n          <div className=\"data pb-s\">\n            <div className=\"dataTitle\">Data</div>\n            <div className=\"dataNumber text-xl pr-m\">\n              <span className=\"c-bodyDimmed\">$</span>\n              <strong>23.731</strong>\n            </div>\n          </div>\n          <svg viewBox=\"0 0 172 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1 31L14.2951 28.4192C15.6894 28.1485 17.1344 28.3813 18.3732 29.0759L25.6071 33.1326C28.8826 34.9695 33.0214 33.3799 34.2252 29.8227L41.5807 8.08787C43.4304 2.62227 51.175 2.66282 52.9673 8.14749L59.5625 28.3291C61.0033 32.7381 66.6882 33.9146 69.7607 30.4397L75.4172 24.0421C77.1235 22.1123 79.8713 21.487 82.2446 22.4884L88.2045 25.0031C91.2555 26.2904 94.7754 24.8726 96.1588 21.8639C99.6048 14.3691 105.859 1.75955 109.182 1.16666C113.743 0.352774 123.828 13.9035 124.591 14.9377C124.624 14.9837 124.653 15.0235 124.685 15.0706L135.49 30.8019C137.776 34.1299 142.63 34.2958 145.138 31.1316L154.496 19.3246C155.182 18.4584 156.095 17.7986 157.132 17.4181L171 12.3333\" stroke=\"var(--c-accent)\" stroke-width=\"3\"/>\n          </svg>\n        </div>\n        <div className=\"chart\">\n          <div className=\"data pb-s\">\n            <div className=\"dataTitle\">Data</div>\n            <div className=\"dataNumber text-xl pr-m\">\n              <span className=\"c-bodyDimmed\">$</span>\n              <strong>7.120</strong>\n            </div>\n          </div>\n          <svg viewBox=\"0 0 172 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1 22L13.3569 13.2048C15.2481 11.8587 17.7461 11.7243 19.7709 12.8598L27.2149 17.0342C29.8858 18.5321 33.2561 17.7782 35.0344 15.2852L43.27 3.73918C45.4164 0.729889 49.7472 0.35847 52.3748 2.95832L62.1256 12.6064C62.5843 13.0603 62.9668 13.5852 63.2583 14.1609L73.3924 34.1745C75.5192 38.3746 81.4338 38.601 83.8754 34.5757L91.1421 22.5954C92.6407 20.1247 95.6875 19.0732 98.3909 20.0936L107.636 23.5831C108.648 23.965 109.741 24.0642 110.809 23.8936C114.344 23.3293 119.467 22.6566 122.382 22.2841C123.836 22.0983 125.172 21.3935 126.142 20.295L135.226 10.0084C137.739 7.16297 142.23 7.3369 144.515 10.3681L154.071 23.0447C155.016 24.298 156.415 25.1312 157.967 25.3656L171 27.3333\" stroke=\"var(--c-accent)\" stroke-width=\"3\"/>\n          </svg>\n        </div>\n      </div>\n      \n      <div className=\"mb-m\"></div>\n\n      <div className=\"detailsCard\">\n        <div className=\"text-s mb-m\">{emails[2].name}</div>\n        <div className=\"text-m mb-m\">This device includes 4 delays that can be patched together</div>\n        <div className=\"text-s mb-l c-bodyDimmed\">{emails[2].content}</div>\n        <div className=\"detailsActions\">\n          <button className=\"button button-accent\">Save</button>\n          <button className=\"button ml-s\">Cancel</button>\n        </div>\n      </div>\n\n\n    </aside>\n  </div>\n)\n\nexport default DemoEmail","export const getVariables = ({\n  baseTextSize,\n  textSizeIncrement,\n  fontFamily,\n  unit,\n  spaceIncrement,\n  textFrameRatio,\n  textFrameY,\n  accentHue,\n  accentSaturation,\n  accentLightness,\n  greySaturation,\n}) => {\n  return {\n    type:\n`--baseTextSize: ${baseTextSize}rem;\n--textSizeIncrement: ${textSizeIncrement};\n\n--text-xs: calc(var(--baseTextSize) / var(--textSizeIncrement));\n--text-s: var(--baseTextSize);\n--text-m: calc(var(--text-s) * var(--textSizeIncrement));\n--text-l: calc(var(--text-m) * var(--textSizeIncrement));\n--text-xl: calc(var(--text-l) * var(--textSizeIncrement));\n\n--lineHeightFixedAmount: 0.35rem;\n--lineHeightRelativeAmount: 1.1em;\n--globalLineHeight: calc(var(--lineHeightFixedAmount) + var(--lineHeightRelativeAmount));\n\n--fontFamily: ${fontFamily};`\n    ,\n    space:\n`--unit: ${unit}rem;\n--spaceIncrement: ${spaceIncrement};\n\n--space-s: var(--unit);\n--space-m: calc(var(--space-s) * var(--spaceIncrement));\n--space-l: calc(var(--space-m) * var(--spaceIncrement));\n--space-xl: calc(var(--space-l) * var(--spaceIncrement));\n--space-2xl: calc(var(--space-xl) * var(--spaceIncrement));\n--space-3xl: calc(var(--space-2xl) * var(--spaceIncrement));\n--space-4xl: calc(var(--space-3xl) * var(--spaceIncrement));`\n    ,\n    textFrame:\n`--textFrameRatio: ${textFrameRatio};\n--textFrameY: ${textFrameY};\n--textFrameX: calc(var(--textFrameY) * var(--textFrameRatio));`    \n    ,\n    color:\n`--accentH: ${accentHue};\n--accentS: ${accentSaturation}%;\n--accentL: ${accentLightness}%;\n--c-accent: hsl(var(--accentH), var(--accentS), var(--accentL));\n\n--greyH: var(--accentH);\n--greyS: ${greySaturation}%;\n--initialGreyLightness: 93%;\n--greyscaleLightnessIncrement: 11%;\n\n--grey1L:  var(--initialGreyLightness);\n--grey2L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 1);\n--grey3L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 2);\n--grey4L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 3);\n--grey5L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 4);\n--grey6L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 5);\n--grey7L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 6);\n--grey8L:  calc(var(--initialGreyLightness) - var(--greyscaleLightnessIncrement) * 7);\n\n--c-grey1: hsl(var(--greyH), var(--greyS), var(--grey1L));\n--c-grey2: hsl(var(--greyH), var(--greyS), var(--grey2L));\n--c-grey3: hsl(var(--greyH), var(--greyS), var(--grey3L));\n--c-grey4: hsl(var(--greyH), var(--greyS), var(--grey4L));\n--c-grey5: hsl(var(--greyH), var(--greyS), var(--grey5L));\n--c-grey6: hsl(var(--greyH), var(--greyS), var(--grey6L));\n--c-grey7: hsl(var(--greyH), var(--greyS), var(--grey7L));\n--c-grey8: hsl(var(--greyH), var(--greyS), var(--grey8L));\n\n--light: white;\n--dark: var(--c-grey8);\n--c-border: hsla(var(--greyH), var(--greyS), var(--grey8L), 0.1);\n--c-overlay: var(--c-grey1);\n--c-xOverlay: var(--c-grey2);\n--c-background: var(--light);\n--c-body: var(--dark);\n--c-bodyDimmed: hsla(var(--greyH), var(--greyS), var(--grey8L), 0.5);\n--c-fieldBorder: var(--c-grey2);\n--c-buttonBg: var(--c-grey2);`\n    ,\n    layer:\n`--radius: 0;\n\n--fieldBorderWidth: 2px;`\n    ,\n  }\n}\n\nexport const darkModeStyles =\n`body.darkMode {\n  --accent: var(--yellow);\n  --c-border: hsla(var(--greyH), var(--greyS), var(--grey1L), 0.1);\n  --c-overlay: var(--c-grey7);\n  --c-xOverlay: var(--c-grey6);\n  --c-background: var(--dark);\n  --c-body: var(--c-grey1);\n  --c-bodyDimmed: hsla(var(--greyH), var(--greyS), var(--grey1L), 0.5);\n  --c-fieldBorder: var(--c-grey6);\n  --c-buttonBg: var(--c-grey6);\n}`\n","import React, { useState, useEffect } from 'react';\nimport './utilities.css';\nimport './common.css';\nimport Specs from './components/specs/specs';\nimport { getRandomObject, setProperty, numberToUnit, fonts } from './utilities';\nimport Settings from './components/settings'\nimport DemoEmail from './components/demo-email/demo-email';\nimport { getVariables, darkModeStyles } from './variables'\n\nconst initialState = {\n  fontFamily: fonts[0],\n  textSizeIncrement: 1.23,\n  baseTextSize: 0.9,\n  textFrameRatio: 2.37,\n  textFrameY: 0.8,\n  spaceIncrement: 1.65,\n  unit: 0.5,\n  accentHue: 254,\n  accentSaturation: 31,\n  accentLightness: 50,\n  greySaturation: 5,\n  radius: 0.4,\n  fieldBorderWidth: 2,\n  buttonRound: false,\n  darkMode: false,\n  preview: 'demo',\n}\n\nfunction App() {\n  const [fontFamily, setFontFamily] = useState(initialState.fontFamily)\n  const [textSizeIncrement, setTextSizeIncrement] = useState(initialState.textSizeIncrement)\n  const [baseTextSize, setBaseTextSize] = useState(initialState.baseTextSize)\n  const [textFrameRatio, setTextFrameRatio] = useState(initialState.textFrameRatio)\n  const [textFrameY, setTextFrameY] = useState(initialState.textFrameY)\n  const [spaceIncrement, setSpaceIncrement] = useState(initialState.spaceIncrement)\n  const [unit, setUnit] = useState(0.5)\n  const [accentHue, setAccentHue] = useState(initialState.accentHue)\n  const [accentSaturation, setAccentSaturation] = useState(initialState.accentSaturation)\n  const [accentLightness, setAccentLightness] = useState(initialState.accentLightness)\n  const [greySaturation, setGreySaturation] = useState(initialState.greySaturation)\n  const [radius, setRadius] = useState(initialState.radius)\n  const [fieldBorderWidth, setFieldBorderWidth] = useState(initialState.fieldBorderWidth)\n  const [buttonRound, setButtonRound] = useState(initialState.buttonRound)\n  const [darkMode, setDarkMode] = useState(initialState.darkMode)\n  const [preview, setPreview] = useState(initialState.preview)\n\n  const variables = getVariables({baseTextSize,\n    textSizeIncrement,\n    fontFamily,\n    unit,\n    spaceIncrement,\n    textFrameRatio,\n    textFrameY,\n    accentHue,\n    accentSaturation,\n    accentLightness,\n    greySaturation,\n  })\n\n  const style = document.createElement('style')\n  document.head.appendChild(style)\n  style.innerHTML = `\n    :root{\n      ${Object.values(variables).join('')}\n    }\n    ${darkModeStyles}\n  `\n\n  const handleRandomize = () => {\n    setFontFamily(getRandomObject().fontFamily)\n    setTextSizeIncrement(getRandomObject().textSizeIncrement)\n    setBaseTextSize(getRandomObject().baseTextSize)\n    setTextFrameRatio(getRandomObject().textFrameRatio)\n    setTextFrameY(getRandomObject().textFrameY)\n    setSpaceIncrement(getRandomObject().spaceIncrement)\n    setAccentHue(getRandomObject().accentHue)\n    setAccentSaturation(getRandomObject().accentSaturation)\n    setGreySaturation(getRandomObject().greySaturation)\n    setRadius(getRandomObject().radius)\n    setFieldBorderWidth(getRandomObject().fieldBorderWidth)\n    setButtonRound(getRandomObject().buttonRound)\n  }\n\n  useEffect(() => {\n    setProperty('fontFamily', fontFamily)\n    setProperty('textSizeIncrement', textSizeIncrement)\n    setProperty('baseTextSize', numberToUnit(baseTextSize, 'rem'))\n    setProperty('textFrameRatio', textFrameRatio)\n    setProperty('textFrameY', numberToUnit(textFrameY, 'em'))\n    setProperty('spaceIncrement', spaceIncrement)\n    setProperty('unit', numberToUnit(unit, 'rem'))\n    setProperty('accentH', accentHue)\n    setProperty('accentS', numberToUnit(accentSaturation, '%'))\n    setProperty('accentL', numberToUnit(accentLightness, '%'))\n    setProperty('greyS', numberToUnit(greySaturation, '%'))\n    setProperty('radius', numberToUnit(radius, 'rem'))\n    setProperty('fieldBorderWidth', numberToUnit(fieldBorderWidth, 'px'))\n    \n    if(buttonRound) {\n      document.querySelector('body').classList.add('roundButtons');\n    } else {\n      document.querySelector('body').classList.remove('roundButtons');\n    }\n    \n    if(darkMode) {\n      document.querySelector('body').classList.add('darkMode');\n    } else {\n      document.querySelector('body').classList.remove('darkMode');\n    }\n\n  }, [accentHue, accentLightness, accentSaturation, baseTextSize, buttonRound, darkMode, fieldBorderWidth, fontFamily, greySaturation, radius, spaceIncrement, textFrameRatio, textFrameY, textSizeIncrement, unit, variables.type])\n\n  return (\n    <div>\n      <Settings\n        fontFamily={fontFamily}\n        setFontFamily={setFontFamily}\n        textSizeIncrement={textSizeIncrement}\n        setTextSizeIncrement={setTextSizeIncrement}\n        baseTextSize={baseTextSize}\n        setBaseTextSize={setBaseTextSize}\n        textFrameRatio={textFrameRatio}\n        setTextFrameRatio={setTextFrameRatio}\n        textFrameY={textFrameY}\n        setTextFrameY={setTextFrameY}\n        spaceIncrement={spaceIncrement}\n        unit={unit}\n        setUnit={setUnit}\n        setSpaceIncrement={setSpaceIncrement}\n        accentHue={accentHue}\n        setAccentHue={setAccentHue}\n        accentSaturation={accentSaturation}\n        setAccentSaturation={setAccentSaturation}\n        accentLightness={accentLightness}\n        setAccentLightness={setAccentLightness}\n        greySaturation={greySaturation}\n        setGreySaturation={setGreySaturation}\n        radius={radius}\n        setRadius={setRadius}\n        fieldBorderWidth={fieldBorderWidth}\n        setFieldBorderWidth={setFieldBorderWidth}\n        buttonRound={buttonRound}\n        setButtonRound={setButtonRound}\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n        preview={preview}\n        setPreview={setPreview}\n\n        handleRandomize={handleRandomize}\n      />\n      {preview === 'specs' ? (\n        <Specs\n          baseTextSize={baseTextSize}\n          textSizeIncrement={textSizeIncrement}\n          spaceIncrement={spaceIncrement}\n          unit={unit}\n          textFrameY={textFrameY}\n          textFrameRatio={textFrameRatio}\n          fontFamily={fontFamily}\n          variables={variables}\n          darkModeStyles={darkModeStyles}\n        />\n      ) : (\n        <DemoEmail />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}